# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages

stages:
  - test
  - deploy

test:
  stage: test
  image: python:latest
  before_script:
    - echo "Installing app python module requirements..."
    - apt-get -qq update && apt-get -qq install -y python
    - apt-get install -qq git
    - apt-get -qq update
    - pip install virtualenv
    - virtualenv venv
    - . venv/bin/activate
    - python -V
    - pip install pandas
  script:
    - echo "Running unit tests... "
    - python data_converter_test.py
    - echo "Testing done"

deploy:
  stage: deploy
  image: alpine
  only:
    - main
  before_script:
    - apk add openssh-client
    - eval $(ssh-agent -s)
    - mkdir -p ~/.ssh
    - echo "$PROD_SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - ssh-keyscan -t rsa ec2-3-15-183-246.us-east-2.compute.amazonaws.com >> ~/.ssh/known_hosts
  script:
    - echo "Deployment started... "
    - ssh admin@ec2-3-15-183-246.us-east-2.compute.amazonaws.com "cd /usr/local/src/client_data_analytics && git checkout main && git pull origin main && sudo apt-get update && sudo apt-get install python3-pip && pip3 install -r requirements.txt && exit"
    - echo "Deployment done"